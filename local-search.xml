<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>极客大挑战2023</title>
    <link href="/2023/12/20/%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%982023/"/>
    <url>/2023/12/20/%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%982023/</url>
    
    <content type="html"><![CDATA[<p>记人生中第一次打的CTF比赛</p><h1 id="RSA"><a href="#RSA" class="headerlink" title="RSA"></a>RSA</h1><h2 id="SignIn"><a href="#SignIn" class="headerlink" title="SignIn"></a>SignIn</h2><p>  明文：5359437b48656c6c6f5f576f726c645f43727970746f5f6269626f6269626f7d<br>  用base16解码得密文：SYC{Hello_World_Crypto_bibobibo}<br>  得到flag</p><h2 id="proof-of-work"><a href="#proof-of-work" class="headerlink" title="proof_of_work"></a>proof_of_work</h2><p>  一个sha256<br><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs scss">import hashlib<br><br>for i1 in <span class="hljs-built_in">range</span>(<span class="hljs-number">32</span>,<span class="hljs-number">127</span>):  <br>    for i2 in <span class="hljs-built_in">range</span>(<span class="hljs-number">32</span>, <span class="hljs-number">127</span>):  <br>        for i3 in <span class="hljs-built_in">range</span>(<span class="hljs-number">32</span>, <span class="hljs-number">127</span>):  <br>            for i4 in <span class="hljs-built_in">range</span>(<span class="hljs-number">32</span>, <span class="hljs-number">127</span>):  <br>                m = hashlib.<span class="hljs-built_in">sha256</span>()  <br>                m.<span class="hljs-built_in">update</span>(<span class="hljs-built_in">str</span>(<span class="hljs-built_in">chr</span>(i1)+<span class="hljs-built_in">chr</span>(i2)+<span class="hljs-built_in">chr</span>(i3)+<span class="hljs-built_in">chr</span>(i4)+<span class="hljs-string">&#x27;qzxf4BpAvFfWGED3&#x27;</span>).<span class="hljs-built_in">encode</span>(<span class="hljs-string">&#x27;utf-8&#x27;</span>))  <br>                des = m.<span class="hljs-built_in">hexdigest</span>()  <br>                if des == <span class="hljs-string">&#x27;5d60736ba4dac09953d7187939d5861ed2d46faf874c5142157aae8430dead84&#x27;</span>:  <br>                    <span class="hljs-built_in">print</span>(<span class="hljs-built_in">chr</span>(i1)+<span class="hljs-built_in">chr</span>(i2)+<span class="hljs-built_in">chr</span>(i3)+<span class="hljs-built_in">chr</span>(i4)+<span class="hljs-string">&#x27;qzxf4BpAvFfWGED3&#x27;</span>)<br></code></pre></td></tr></table></figure><br><figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs 1c"><span class="hljs-meta"># 输出</span><br><span class="hljs-meta"># S2iuqzxf4BpAvFfWGED3</span><br></code></pre></td></tr></table></figure><br>  输入前四位，得到flag：SYC{st3p_1nt0_1nter4ctive_Crypt0graphy}</p><h2 id="SimpleRSA"><a href="#SimpleRSA" class="headerlink" title="SimpleRSA"></a>SimpleRSA</h2><h4 id="解答："><a href="#解答：" class="headerlink" title="解答："></a>解答：</h4><figure class="highlight makefile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs makefile">import gmpy2  <br>from Crypto.Util.number import *<br><br>e =65537  <br>p = 24724324630507415330944861660078769085865178656494256140070836181271808964994457686409910764936630391300708451701526900994412268365698217113884698394658886249353179639767806926527103624836198494439742123128823109527320850165486500517304731554371680236789357527395416607541627295126502440202040826686102479225702795427693781581584928770373613126894936500089282093366117940069743670997994742595407158340397268147325612840109162997306902492023078425623839297511182053658542877738887677835528624045235391227122453939459585542485427063193993069301141720316104612551340923656979591045138487394366671477460626997125944456537  <br>c = 510345661718450375632304764819724223824018609359964259503762283253350010161515190912152623604019093266967095847334388281390406831587663253164256543905694021952211220652820225527413861208452760215767828927039893435528572148282529198773772864255061213208279999011194952146362748485103032149806538140693537361755210176698895104708379400806511907719904867068865970241208806615061055047254026118016836750283966478103987375361826198930529462261013324904522014804502582865716441828895047550041401172127129749969507853355531197814919603963664646220505672302543085959372679395717892060245461464861507164276442140407308832537707450729432224150754603518526288767105682399190438680085925078051459448618725871249563011864525585870188123725554411655044152994826056900502298772802133526591794328224932405680583757307064395792317383571866619582974377344736930271554160701478385763426091091686496788999588340419226785217028504684542197970387916262126278955278523452903043316452825738030645100271595942652498852506660789605846309602343932245435421425673058238785509280366229754404949219663043627431437755087855502139890639468481922788973821783957766433857773771229298328019250652625289700950165414584983487319078090573179470893450632419467111117341472  <br>q = 3  <br>  <br><span class="hljs-comment"># n = p*q  </span><br><span class="hljs-comment"># phi = (p-1)*(q-1)  </span><br>phi = p-1  <br>d = gmpy2.invert(e,phi)  <br>m = pow(c,d,p)  <br>flag = long_to_bytes(m)  <br>  <br>assert len(flag) == 35  <br>print(flag)<br></code></pre></td></tr></table></figure><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs autoit"><span class="hljs-meta"># 运行结果</span><br><span class="hljs-meta"># b<span class="hljs-string">&#x27;SYC&#123;Just_a_s1mple_modular_equation&#125;&#x27;</span></span><br></code></pre></td></tr></table></figure><p>  得到flag</p><h2 id="OTPTwice"><a href="#OTPTwice" class="headerlink" title="OTPTwice"></a>OTPTwice</h2><h4 id="解答：-1"><a href="#解答：-1" class="headerlink" title="解答："></a>解答：</h4><figure class="highlight llvm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs llvm"><span class="hljs-keyword">c</span><span class="hljs-number">1</span> <span class="hljs-operator">=</span> bytearray(b&#x27;\xdbi\xab\<span class="hljs-keyword">x</span><span class="hljs-number">8</span>d\xfb<span class="hljs-number">0</span>\xd<span class="hljs-number">3</span>\xfe!\xf<span class="hljs-number">8</span>Xpy\<span class="hljs-keyword">x</span><span class="hljs-number">80</span>w\<span class="hljs-keyword">x</span><span class="hljs-number">8</span><span class="hljs-keyword">c</span>\<span class="hljs-keyword">x</span><span class="hljs-number">87</span>\xb<span class="hljs-number">9</span>&#x27;)  <br><span class="hljs-keyword">c</span><span class="hljs-number">2</span> <span class="hljs-operator">=</span> bytearray(b&#x27;o\xb<span class="hljs-number">0</span>%\xfb\xdb\<span class="hljs-keyword">x</span><span class="hljs-number">0</span>e\r\<span class="hljs-keyword">x</span><span class="hljs-number">04</span>\xde\xd<span class="hljs-number">1</span>\<span class="hljs-keyword">x</span><span class="hljs-number">9</span>a\<span class="hljs-keyword">x</span><span class="hljs-number">08</span>w\xda<span class="hljs-number">4</span>\<span class="hljs-keyword">x</span><span class="hljs-number">0</span>f\<span class="hljs-keyword">x</span><span class="hljs-number">0</span>cR&#x27;)  <br><span class="hljs-keyword">c</span><span class="hljs-number">3</span> <span class="hljs-operator">=</span> bytearray(b&#x27;\xe<span class="hljs-number">7</span>\<span class="hljs-keyword">x</span><span class="hljs-number">80</span>\xcd\ria\xb<span class="hljs-number">2</span>\xca\<span class="hljs-keyword">x</span><span class="hljs-number">89</span>\<span class="hljs-keyword">x</span><span class="hljs-number">1</span>a\<span class="hljs-keyword">x</span><span class="hljs-number">9</span>d<span class="hljs-comment">;|#3\xf7\xbb\x96&#x27;)  </span><br>  <br>k<span class="hljs-number">2</span> <span class="hljs-operator">=</span> bytearray(<span class="hljs-keyword">x</span> ^ y for <span class="hljs-keyword">x</span><span class="hljs-punctuation">,</span>y in zip(<span class="hljs-keyword">c</span><span class="hljs-number">1</span><span class="hljs-punctuation">,</span><span class="hljs-keyword">c</span><span class="hljs-number">2</span>))  <br>k<span class="hljs-number">1</span> <span class="hljs-operator">=</span> bytearray(<span class="hljs-keyword">x</span> ^ y for <span class="hljs-keyword">x</span><span class="hljs-punctuation">,</span>y in zip(<span class="hljs-keyword">c</span><span class="hljs-number">2</span><span class="hljs-punctuation">,</span><span class="hljs-keyword">c</span><span class="hljs-number">3</span>))  <br>m <span class="hljs-operator">=</span> bytearray(<span class="hljs-keyword">x</span> ^ y for <span class="hljs-keyword">x</span><span class="hljs-punctuation">,</span>y in zip(<span class="hljs-keyword">c</span><span class="hljs-number">3</span><span class="hljs-punctuation">,</span>k<span class="hljs-number">2</span>))  <br>  <br>print(m)<br></code></pre></td></tr></table></figure><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs autoit"><span class="hljs-meta"># 输出</span><br><span class="hljs-meta"># bytearray(b<span class="hljs-string">&#x27;SYC&#123;I_l0v3_Crypt0&#125;&#x27;</span>)</span><br></code></pre></td></tr></table></figure><h2 id="OldAlgorithm"><a href="#OldAlgorithm" class="headerlink" title="OldAlgorithm"></a>OldAlgorithm</h2><p>  该题是中国剩余定理情况</p><h4 id="解答：-2"><a href="#解答：-2" class="headerlink" title="解答："></a>解答：</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> Crypto.Util.number <span class="hljs-keyword">import</span> *<br><span class="hljs-keyword">import</span> math  <br>  <br><span class="hljs-keyword">def</span> <span class="hljs-title function_">Get_Mi</span>(<span class="hljs-params">m_list, m</span>):  <br>    M_list = []  <br>    <span class="hljs-keyword">for</span> mi <span class="hljs-keyword">in</span> m_list:  <br>        M_list.append(m // mi)  <br>    <span class="hljs-keyword">return</span> M_list  <br>  <br>  <br><span class="hljs-keyword">def</span> <span class="hljs-title function_">Get_resMi</span>(<span class="hljs-params">M_list, m_list</span>):  <br>    resM_list = []  <br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-built_in">len</span>(M_list)):  <br>        resM_list.append(Get_ni(M_list[i], m_list[i])[<span class="hljs-number">0</span>])  <br>    <span class="hljs-keyword">return</span> resM_list  <br>  <br>  <br><span class="hljs-keyword">def</span> <span class="hljs-title function_">Get_ni</span>(<span class="hljs-params">a, b</span>):  <br>    <span class="hljs-keyword">if</span> b == <span class="hljs-number">0</span>:  <br>        x = <span class="hljs-number">1</span>  <br>        y = <span class="hljs-number">0</span>  <br>        q = a  <br>        <span class="hljs-keyword">return</span> x, y, q  <br>    ret = Get_ni(b, a % b)  <br>    x = ret[<span class="hljs-number">0</span>]  <br>    y = ret[<span class="hljs-number">1</span>]  <br>    q = ret[<span class="hljs-number">2</span>]  <br>    temp = x  <br>    x = y  <br>    y = temp - a // b * y  <br>    <span class="hljs-keyword">return</span> x, y, q  <br>  <br>  <br><span class="hljs-keyword">def</span> <span class="hljs-title function_">result</span>(<span class="hljs-params">a_list, m_list</span>):  <br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-built_in">len</span>(m_list)):  <br>        <span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(i + <span class="hljs-number">1</span>, <span class="hljs-built_in">len</span>(m_list)):  <br>            <span class="hljs-keyword">if</span> <span class="hljs-number">1</span> != math.gcd(m_list[i], m_list[j]):  <br>                <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;不能直接利用中国剩余定理&quot;</span>)  <br>                <span class="hljs-keyword">return</span>  <br>    m = <span class="hljs-number">1</span>  <br>    <span class="hljs-keyword">for</span> mi <span class="hljs-keyword">in</span> m_list:  <br>        m *= mi  <br>    Mi_list = Get_Mi(m_list, m)  <br>    Mi_inverse = Get_resMi(Mi_list, m_list)  <br>    x = <span class="hljs-number">0</span>  <br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-built_in">len</span>(a_list)):  <br>        x += Mi_list[i] * Mi_inverse[i] * a_list[i]  <br>        x %= m  <br>    <span class="hljs-keyword">return</span> x  <br>  <br>p= [<span class="hljs-number">58657</span>, <span class="hljs-number">47093</span>, <span class="hljs-number">47963</span>, <span class="hljs-number">41213</span>, <span class="hljs-number">57653</span>, <span class="hljs-number">56923</span>, <span class="hljs-number">41809</span>, <span class="hljs-number">49639</span>, <span class="hljs-number">44417</span>, <span class="hljs-number">38639</span>, <span class="hljs-number">39857</span>, <span class="hljs-number">53609</span>, <span class="hljs-number">55621</span>, <span class="hljs-number">41729</span>, <span class="hljs-number">60497</span>, <span class="hljs-number">44647</span>, <span class="hljs-number">39703</span>, <span class="hljs-number">55117</span>, <span class="hljs-number">44111</span>, <span class="hljs-number">57131</span>, <span class="hljs-number">37747</span>, <span class="hljs-number">63419</span>, <span class="hljs-number">63703</span>, <span class="hljs-number">64007</span>, <span class="hljs-number">46349</span>, <span class="hljs-number">39241</span>, <span class="hljs-number">39313</span>, <span class="hljs-number">44909</span>, <span class="hljs-number">40763</span>, <span class="hljs-number">46727</span>, <span class="hljs-number">34057</span>, <span class="hljs-number">56333</span>]  <br>c= [<span class="hljs-number">36086</span>, <span class="hljs-number">4005</span>, <span class="hljs-number">3350</span>, <span class="hljs-number">23179</span>, <span class="hljs-number">34246</span>, <span class="hljs-number">5145</span>, <span class="hljs-number">32490</span>, <span class="hljs-number">16348</span>, <span class="hljs-number">13001</span>, <span class="hljs-number">13628</span>, <span class="hljs-number">7742</span>, <span class="hljs-number">46317</span>, <span class="hljs-number">50824</span>, <span class="hljs-number">23718</span>, <span class="hljs-number">32995</span>, <span class="hljs-number">7640</span>, <span class="hljs-number">10590</span>, <span class="hljs-number">46897</span>, <span class="hljs-number">39245</span>, <span class="hljs-number">16633</span>, <span class="hljs-number">31488</span>, <span class="hljs-number">36547</span>, <span class="hljs-number">42136</span>, <span class="hljs-number">52782</span>, <span class="hljs-number">31929</span>, <span class="hljs-number">34747</span>, <span class="hljs-number">29026</span>, <span class="hljs-number">18748</span>, <span class="hljs-number">6634</span>, <span class="hljs-number">9700</span>, <span class="hljs-number">8126</span>, <span class="hljs-number">5197</span>]  <br><br><span class="hljs-built_in">print</span>(long_to_bytes(result(c,p)))<br></code></pre></td></tr></table></figure><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs autoit"><span class="hljs-meta"># 输出</span><br><span class="hljs-meta"># b<span class="hljs-string">&#x27;SYC&#123;CRT_1s_s0_ju1cy!&#125;]mC\x9c\xf9C/\xfc\xb8t\x16&#x27;</span></span><br></code></pre></td></tr></table></figure><p>得到flag：SYC{CRT_1s_s0_ju1cy!}</p><h2 id="easy-classic"><a href="#easy-classic" class="headerlink" title="easy_classic"></a>easy_classic</h2><p>  第一层明文：udzeojxuwqcu<br>  凯撒加密，密钥Q，密文：enjoythegame</p><p>  第二层明文：ialhhooavtepcyr<br>  看起来很像打乱顺序的密文，重新排序后得到：ilovecryptohaha</p><p>  第三层明文：5a6H5a6Z5LiH5rOV55qE6YKj5Liq5rqQ5aS0<br>  base64解码，得到密文：宇宙万法的那个源头<br>    ps.必须是uft-8编码的汉字</p><p>  第四层明文：熊曰：呋食食食取噗山笨笨破嗄咯哈動嗡雜類嗒嘿啽沒歡破吖咬我啽寶盜噔咯沒<br>  熊曰加密，上网使用与相关加解密网站得到密文：never gonna give you up<br>    网站：<a href="http://hi.pcmoe.net/">与熊论道/熊曰加密 - PcMoe!</a></p><p>  第五层<br>  password: adltlfltqrcy<br>  key: 👝👘👠👩👞👘👤👜<br>    密钥为emoji加密，使用相关网站解密得到key：fairgame<br> Playfair解密，得到密文：genshinstart</p><p>  输入密文，解开最后的txt的锁，得到flag：SYC{classical_1s_fun}</p><h2 id="PolyRSA"><a href="#PolyRSA" class="headerlink" title="PolyRSA"></a>PolyRSA</h2><h4 id="解析："><a href="#解析：" class="headerlink" title="解析："></a>解析：</h4><p>$\because c1=(2p+3q)^{e1}$ mod n<br>$\therefore c1=((2p)^{e1}+(3q)^{e1})$ mod n<br>$\therefore c1^{e2}=((2p)^{K}+(3q)^{K})$ mod n<br>同理<br>$\because c2=(5p+7q)^{e1}$ mod n<br>$\therefore c2=((5p)^{e2}+(7q)^{e2})$ mod n<br>$\therefore c2^{e1}=((5p)^{K}+(7q)^{K})$ mod n</p><p>$\therefore c2^{e1}<em>3^{K}-c1^{e2}</em>7^{K}=p^{K}<em>(15^{K}-14^{K})=p^{K}$<br>  $c1^{e2}</em>5^{K}-c2^{e1}<em>2^{K}=q^{K}</em>(15^{K}-14^{K})=q^{K}$</p><p>$\therefore p=gcd(c2^{e1}<em>3^{K}-c1^{e2}</em>7^{K},n)$<br>  $q=gcd(c1^{e2}<em>5^{K}-c2^{e1}</em>2^{K},n)$</p><h4 id="解答：-3"><a href="#解答：-3" class="headerlink" title="解答："></a>解答：</h4><figure class="highlight makefile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs makefile">from Crypto.Util.number import *<br>from gmpy2 import *<br>  <br>K = e1*e2  <br>w1 = (pow(c2, e1, n)*pow(3, K, n)) % n - (pow(c1, e2, n)*pow(7, K, n)) % n  <br>w2 = (pow(c1, e2, n)*pow(5, K, n)) % n - pow(c2, e1, n)*pow(2, K, n) % n  <br><span class="hljs-comment"># k1 = (c2**e1)*(3**K) - (c1**e2)*(7**K)  </span><br><span class="hljs-comment"># k2 = c1**e2*5**K - c2**e1*2**K  </span><br>  <br>p = gcd(w1, n)  <br>q = gcd(w2, n)  <br>phi = (p-1)*(q-1)  <br>d = inverse(e, phi)  <br>m = pow(c, d, n)  <br>print(long_to_bytes(m))<br><br>e = 65537  <br>e1 = 113717  <br>e2 = 80737  <br>c1 = 97528398828294138945371018405777243725957112272614466238005409057342884425132214761228537249844134865481148636534134025535106624840957740753950100180978607132333109806554009969378392835952544552269685553539656827070349532458156758965322477969141073720173165958341043159560928836304172136610929023123638981560836183245954461041167802574206323129671965436040047358250847178930436773249800969192016749684095882580749559014647942135761757750292281205876241566597813517452803933496218995755905344070203047797893640399372627351254542342772576533524820435965479881620338366838326652599102311019884528903481310690767832417584600334987458835108576322111553947045733143836419313427495888019352323209000292825566986863770366023326755116931788018138432898323148059980463407567431417724940484236335082696026821105627826117901730695680967455710434307270501190258033004471156993017301443803372029004817834317756597444195146024630164820841200575179112295902020141040090350486764038633257871003899386340004440642516190842086462237559715130631205046041819931656962904630367121414263911179041905140516402771368603623318492074423223885367923228718341206283572152570049573607906130786276734660847733952210105659707746969830132429975090175091281363770357  <br>c2 = 353128571201645377052005694809874806643786163076931670184196149901625274899734977100920488129375537186771931435883114557320913415191396857882995726660784707377672210953334914418470453787964899846194872721616628198368241044602144880543115393715025896206210152190007408112767478800650578941849344868081146624444817544806046188600685873402369145450593575618922226415069043442295774369567389939040265656574664538667552522329712111984168798829635080641332045614585247317991581514218486004191829362787750803153463482021229058714990823658655863245025037102127138472397462755776598314247771125981017814912049441827643898478473451005083533693951329544115861795587564408860828213753948427321483082041546722974666875065831843384005041800692983406353922680299538080900818930589336142421748023025830846906503542594380663429947801329079870530727382679634952272644949425079242992486832995962516376820051495641486546631849426876810933393153871774796182078367277299340503872124124714036499367887886486264658590613431293656417255355575602576047502506125375605713228912611320198066713358654181533335650785578352716562937038768171269136647529849805172492594142026261051266577821582011917001752590659862613307646536049830151262848916867223615064832279222  <br>c = 375617816311787295279632219241669262704366237192565344884527300748210925539528834207344757670998995567820735715933908541800125317082581328287816628816752542104514363629022246620070560324071543077301256917337165566677142545053272381990573611757629429857842709092285442319141751484248315990593292618113678910350875156232952525787082482638460259354559904243062546518553607882194808191571131590524874275187750985821420412987586148770397073003186510357920710387377990379862185266175190503647626248057084923516190642292152259727446111686043531725993433395002330208067534104745851308178560234372373476331387737629284961288204368572750848248186692623500372605736825205759172773503283282321274793846281079650686871355211691681512637459986684769598186821524093789286661348936784712071312135814683041839882338235290487868969391040389837253093468883093296547473466050960563347060307256735803099039921213839491129726807647623542881247210251994139130146519265086673883077644185971830004165931626986486648581644383717994174627681147696341976767364316172091139507445131410662391699728189797082878876950386933926807186382619331901457205957462337191923354433435013338037399565519987793880572723211669459895193009710035003369626116024630678400746946356  <br>n = 728002565949733279371529990942440022467681592757835980552797682116929657292509059813629423038094227544032071413317330087468458736175902373398210691802243764786251764982802000867437756347830992118278032311046807282193498960587170291978547754942295932606784354258945168927044376692224049202979158068158842475322825884209352566494900083765571037783472505580851500043517614314755340168507097558967372661966013776090657685241689631615245294004694287660685274079979318342939473469143729494106686592347327776078649315612768988028622890242005700892937828732613800620455225438339852445425046832904615827786856105112781009995862999853122308496903885748394541643702103368974605177097553007573113536089894913967154637055293769061726082740854619536748297829779639633209710676774371525146758917646731487495135734759201537358734170552231657257498090553682791418003138924472103077035355223367678622115314235119493397080290540006942708439607767313672671274857069053688258983103863067394473084183472609906612056828326916114024662795812611685559034285371151973580240723680736227737324052391721149957542711415812665358477474058103338801398214688403784213100455466705770532894531602252798634923125974783427678469124261634518543957766622712661056594132089  <br></code></pre></td></tr></table></figure><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs autoit"><span class="hljs-meta"># 输出</span><br><span class="hljs-meta"># b<span class="hljs-string">&#x27;SYC&#123;poly_rsa_Just_need5_s1mple_gcd&#125;&#x27;</span></span><br></code></pre></td></tr></table></figure><h2 id="Fi1nd-th3-x’"><a href="#Fi1nd-th3-x’" class="headerlink" title="Fi1nd_th3_x’"></a>Fi1nd_th3_x’</h2><h4 id="解析：-1"><a href="#解析：-1" class="headerlink" title="解析："></a>解析：</h4><p>$\begin{cases}d \equiv dP \pmod{(q-1)<em>(r-1)} \\d \equiv dQ \pmod{(p-1)</em>(r-1)} \\d \equiv dR \pmod{(q-1)*(p-1)}\end{cases}$<br>中国剩余定理不互质</p><h4 id="解答：-4"><a href="#解答：-4" class="headerlink" title="解答："></a>解答：</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> gmpy2  <br><span class="hljs-keyword">from</span> functools <span class="hljs-keyword">import</span> reduce  <br><br>p= <span class="hljs-number">13014610351521460822156239705430709078128228907778181478242620569429327799535062679140131416771915929573454741755415612880788196172134695027201422226050343</span>  <br>q= <span class="hljs-number">12772373441651008681294250861077909144300908972709561019514945881228862913558543752401850710742410181542277593157992764354184262443612041344749961361188667</span>  <br>r= <span class="hljs-number">12128188838358065666687296689425460086282352520167544115899775800918383085863282204525519245937988837403739683061218279585168168892037039644924073220678419</span>  <br>dP= <span class="hljs-number">116715737414908163105708802733763596338775040866822719131764691930369001776551671725363881836568414327815420649861207859100479999650414099346914809923964116101517432576562641857767638396325944526867458624878906968552835814078216316470330511385701105459053294771612727181278955929391807414985165924450505855941</span>  <br>dQ= <span class="hljs-number">44209639124029393930247375993629669338749966042856653556428540234515804939791650065905841618344611216577807325504984178760405516121845853248373571704473449826683120387747977520655432396578361308033763778324817416507993263234206797363191089863381905902638111246229641698709383653501799974217118168526572365797</span>  <br>dR= <span class="hljs-number">60735172709413093730902464873458655487237612458970735840670987186877666190533417038325630420791294593669609785154204677845781980482700493870590706892523016041087206844082222225206703139282240453277802870868459288354322845410191061009582969848870045522383447751431300627611762289800656277924903605593069856921</span>  <br>c= <span class="hljs-number">93063188325241977486352111369210103514669725591157371105152980481620575818945846725056329712195176948376321676112726029400835578531311113991944495646259750817465291340479809938094295621728828133981781064352306623727112813796314947081857025012662546178066873083689559924412320123824601550896063037191589471066773464829226873338699012924080583389032903142107586722373131642720522453842444615499672193051587154108368643495983197891525747653618742702589711752256009</span>  <br>  <br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;(p-1)*(r-1) =&#x27;</span>,(p-<span class="hljs-number">1</span>)*(r-<span class="hljs-number">1</span>))  <br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;(q-1)*(r-1) =&#x27;</span>,(q-<span class="hljs-number">1</span>)*(r-<span class="hljs-number">1</span>))  <br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;(p-1)*(q-1) =&#x27;</span>,(p-<span class="hljs-number">1</span>)*(q-<span class="hljs-number">1</span>))  <br><br>  <br><span class="hljs-keyword">def</span> <span class="hljs-title function_">exgcd</span>(<span class="hljs-params">a, b</span>):  <br>    <span class="hljs-keyword">if</span> b == <span class="hljs-number">0</span>: <span class="hljs-keyword">return</span> <span class="hljs-number">1</span>, <span class="hljs-number">0</span>  <br>    x, y = exgcd(b, a % b)  <br>    <span class="hljs-keyword">return</span> y, x - a // b * y  <br>  <br>  <br><span class="hljs-keyword">def</span> <span class="hljs-title function_">uni</span>(<span class="hljs-params">P, Q</span>):  <br>    r1, m1 = P  <br>    r2, m2 = Q  <br>  <br>    d = gmpy2.gcd(m1, m2)  <br>    <span class="hljs-keyword">assert</span> (r2 - r1) % d == <span class="hljs-number">0</span>  <br>  <br>    l1, l2 = exgcd(m1 // d, m2 // d)  <br>  <br>    <span class="hljs-keyword">return</span> (r1 + (r2 - r1) // d * l1 * m1) % gmpy2.lcm(m1, m2), gmpy2.lcm(m1, m2)  <br>  <br>  <br><span class="hljs-keyword">def</span> <span class="hljs-title function_">CRT</span>(<span class="hljs-params">eq</span>):  <br>    <span class="hljs-keyword">return</span> reduce(uni, eq)  <br>  <br>  <br><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&quot;__main__&quot;</span>:  <br>    n = <span class="hljs-built_in">int</span>(<span class="hljs-built_in">input</span>())  <br>    eq = [<span class="hljs-built_in">list</span>(<span class="hljs-built_in">map</span>(<span class="hljs-built_in">int</span>, <span class="hljs-built_in">input</span>().strip().split()))[::-<span class="hljs-number">1</span>] <span class="hljs-keyword">for</span> x <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(n)]  <br>    d = CRT(eq)[<span class="hljs-number">0</span>]<br>      <br>n = p*q*r  <br>m = <span class="hljs-built_in">pow</span>(c,d,n)  <br><br>flag = libnum.n2s(m)  <br><span class="hljs-built_in">print</span>(flag)<br></code></pre></td></tr></table></figure><figure class="highlight gcode"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs gcode"><span class="hljs-attr"># 输出</span><br><span class="hljs-attr">(p-1</span>)*<span class="hljs-comment">(r-1)</span> = <span class="hljs-number">157843652000901922592922534078798438728561466809160280102796295598657892969643944706331069245997476544245343941352790420588475071314554864105017844042288024862815624473670646072940554294732151308571897295236552684396649767503957047616962978624449348438551386053918285535437988924118937549728089877793860918956</span><br><span class="hljs-comment">(q-1)</span>*<span class="hljs-comment">(r-1)</span> = <span class="hljs-number">154905757014372756191477923232488802075510411348567355414988814359374852064824181741663658727687998705149903985671747780705960374732554616826563203303584163459125118604057521416183781255969121762147826355466246464743348283573511339459135541869974720375624567710723081303090966036696876360406676904859412410388</span><br><span class="hljs-comment">(p-1)</span>*<span class="hljs-comment">(q-1)</span> = <span class="hljs-number">166227463607209004468932873221626620944628889899142110675440222050856617147455380049619547065213045395392929727012833645043930997376712553892400252643682129053352313364478991542722896445389658481349386462407754423678541287560754968000284796665028132977555819700889151726789989252780704135125995666535475823772</span><br><br><span class="hljs-attr"># 输入</span><br><span class="hljs-attr">3</span><br><span class="hljs-number">157843652000901922592922534078798438728561466809160280102796295598657892969643944706331069245997476544245343941352790420588475071314554864105017844042288024862815624473670646072940554294732151308571897295236552684396649767503957047616962978624449348438551386053918285535437988924118937549728089877793860918956</span> <span class="hljs-number">44209639124029393930247375993629669338749966042856653556428540234515804939791650065905841618344611216577807325504984178760405516121845853248373571704473449826683120387747977520655432396578361308033763778324817416507993263234206797363191089863381905902638111246229641698709383653501799974217118168526572365797</span><br><span class="hljs-number">154905757014372756191477923232488802075510411348567355414988814359374852064824181741663658727687998705149903985671747780705960374732554616826563203303584163459125118604057521416183781255969121762147826355466246464743348283573511339459135541869974720375624567710723081303090966036696876360406676904859412410388</span> <span class="hljs-number">116715737414908163105708802733763596338775040866822719131764691930369001776551671725363881836568414327815420649861207859100479999650414099346914809923964116101517432576562641857767638396325944526867458624878906968552835814078216316470330511385701105459053294771612727181278955929391807414985165924450505855941</span><br><span class="hljs-number">166227463607209004468932873221626620944628889899142110675440222050856617147455380049619547065213045395392929727012833645043930997376712553892400252643682129053352313364478991542722896445389658481349386462407754423678541287560754968000284796665028132977555819700889151726789989252780704135125995666535475823772</span> <span class="hljs-number">60735172709413093730902464873458655487237612458970735840670987186877666190533417038325630420791294593669609785154204677845781980482700493870590706892523016041087206844082222225206703139282240453277802870868459288354322845410191061009582969848870045522383447751431300627611762289800656277924903605593069856921</span><br><span class="hljs-attr">#输出</span><br><span class="hljs-attr">SYC&#123;CRT_1</span>s_f<span class="hljs-number">3</span><span class="hljs-symbol">n_but_Gen3</span>hi_i<span class="hljs-name">m9</span>act_is_a_balabalaba&#125;<br></code></pre></td></tr></table></figure><p>得到flag：SYC{CRT_1s_f3n_but_Gen3hi_im9act_is_a_balabalaba}</p><h4 id="小彩蛋"><a href="#小彩蛋" class="headerlink" title="小彩蛋"></a>小彩蛋</h4><p>txt文本：<br>5Lq65Lus5Y+q6K6w5b6X77yM6L+Z5pys5piv6aOO5ZKM5pel5Li955qE5LiA5aSp77yManJsNzc35q2j5Zyo572R5LiK5a2m5Lmg5a+G56CB5a2m44CC5b+954S25LmL6Ze077yM6buR6Imy5raI6YCA77yM5bGP5bmV55m95YWJ6aqk6LW377yM5omA5pyJ55qE6K665paH6YO95reh5Ye655y85biY44CC5LuW5Yed56We5LiA55yL77yM5Y205Y+q5pyJ5rex6YKD5aaC5aKo55qE4oCc5Y6f56We4oCd5LqM5a2X5Zyo5Zue5bqU552A44CC5pyq5Y+K5oCd6ICD77yManJsNzc36ISR6KKL5LiA6Zi15pmV55yp44CC6ICM5q2k5Yi777yM5o+Q55Om54m55aSn6ZmG5LiK56m65pyJ6YeR5YWJ6Zeq54OB77yM56m66Ze05Lmx5rWB5LmL5YaF77yM5LiD56eN5YWD57Sg5Yqb5pKV5byA5LqG5pe256m66KOC57yd77yM6aOO5bim5p2l5LqG5pWF5LqL55qE56eN5a2Q44CC5Y+v5YaN5Z2a5Zu655qE5bKp55+z5Lmf6Zq+6YCD56Oo5o2f55qE5ZG96L+Q44CC4oCc5LiW55WM77yM6YGX5b+Y5oiR44CC4oCd5LuW57uI56m25b+Y6K6w5LqG6Ieq5bexQ3J5cHRvZXLnmoTouqvku73jgILigJzmj5Dnk6bnibnlpKfpmYbnmoTml4XkurrvvIzkvaDog73mib7liLDmiJHpgZflpLHnmoTotKblj7flkJfvvJ/igJ0=<br>base64解码：<br>人们只记得，这本是风和日丽的一天，jrl777正在网上学习密码学。忽然之间，黑色消退，屏幕白光骤起，所有的论文都淡出眼帘。他凝神一看，却只有深邃如墨的“原神”二字在回应着。未及思考，jrl777脑袋一阵晕眩。而此刻，提瓦特大陆上空有金光闪烁，空间乱流之内，七种元素力撕开了时空裂缝，风带来了故事的种子。可再坚固的岩石也难逃磨损的命运。“世界，遗忘我。”他终究忘记了自己Cryptoer的身份。“提瓦特大陆的旅人，你能找到我遗失的账号吗？”</p><h1 id="misc"><a href="#misc" class="headerlink" title="misc"></a>misc</h1><h2 id="DEATH-N0TE"><a href="#DEATH-N0TE" class="headerlink" title="DEATH_N0TE"></a>DEATH_N0TE</h2><h4 id="前半段flag"><a href="#前半段flag" class="headerlink" title="前半段flag"></a>前半段flag</h4><p>将图片用steagsolve打开，lsb隐写解码，发现疑似明文：<br>IuS9oOe7p+e7reinguWvn+aJi+S4iua8hum7keiJsueahOeslOiusOacrO+8jOWGt+mdmeS4i+adpeeahOS9oOWPkeeOsOS6huiXj+WcqOWwgemdouacgOS4i+i+ueeahOS4gOihjOWwj+WtlzpTWUN7RDRAVGhfTjB0NF8iCiLkvaDmtY/op4jov4fmlbTkuKrnrJTorrDmnKzvvIzlj6/mg5zlhajmmK/nqbrnmb3pobXvvIzlhbbkuK3mnInkuIDpobXkuI3nn6XpgZPooqvosIHmkpXmjonkuobvvIzkvaDmnIDnu4jov5jmmK/nv7vliLDkuobnvLrlpLHnmoTpgqPkuIDpobUiCiLkvaDnlKjpk4XnrJTmtoLmirnnnYDlkI7pnaLkuIDpobXvvIzkuIrpnaLnvJPnvJPlh7rnjrDkuobpgZflpLHnmoTnl5Xov7kuLi4i<br>base64解码得到：<br>“你继续观察手上漆黑色的笔记本，冷静下来的你发现了藏在封面最下边的一行小字:SYC{D4@Th_N0t4_”<br>“你浏览过整个笔记本，可惜全是空白页，其中有一页不知道被谁撕掉了，你最终还是翻到了缺失的那一页”<br>“你用铅笔涂抹着后面一页，上面缓缓出现了遗失的痕迹…”<br>找到前半截flag：SYC{D4@Th_N0t4_</p><h4 id="后半截flag"><a href="#后半截flag" class="headerlink" title="后半截flag"></a>后半截flag</h4><p>从图片中能隐约看见白色像素点，推测需要提取像素点，构成新图片<br><figure class="highlight haxe"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs haxe">from PIL <span class="hljs-keyword">import</span> Image  <br>  <br>im = Image.open(<span class="hljs-string">&#x27;d:/Users/ASUS/Downloads/DEATH_N0TE/kamisama.png&#x27;</span>)  <br>pix = im.load()  <br>width = im.size[<span class="hljs-number">0</span>]  <br>height = im.size[<span class="hljs-number">1</span>]  <br><span class="hljs-meta"># 图片查看后猜测间隔距离为5像素  </span><br><span class="hljs-keyword">new</span><span class="hljs-type">_width</span> = width <span class="hljs-comment">// 5  </span><br><span class="hljs-keyword">new</span><span class="hljs-type">_height</span> = height <span class="hljs-comment">// 5  </span><br><br><span class="hljs-keyword">new</span><span class="hljs-type">_img</span> = Image.<span class="hljs-keyword">new</span><span class="hljs-type"></span>(<span class="hljs-string">&quot;RGB&quot;</span>, (<span class="hljs-keyword">new</span><span class="hljs-type">_width</span>, <span class="hljs-keyword">new</span><span class="hljs-type">_height</span>))  <br><span class="hljs-keyword">for</span> x <span class="hljs-keyword">in</span> range(<span class="hljs-number">0</span>,width,<span class="hljs-number">5</span>):  <span class="hljs-type"></span><br>    <span class="hljs-keyword">for</span> y <span class="hljs-keyword">in</span> range(<span class="hljs-number">0</span>,height,<span class="hljs-number">5</span>):  <span class="hljs-type"></span><br>        rgb=pix[x, y]  <br></code></pre></td></tr></table></figure><br>        new_img.putpixel((x//5,y//5),(int(rgb[0]),int(rgb[1]),int(rgb[2])))<br><figure class="highlight haxe"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs haxe"><span class="hljs-keyword">new</span><span class="hljs-type">_img</span>.save(<span class="hljs-string">&#x27;new_image.png&#x27;</span>)<br></code></pre></td></tr></table></figure><br>得到图片<br>![[new_image.png]]<br>结合题目，该图片上的花体字是死亡笔记中的一种字体，对照提取得到：TkFNRV9vMnRha3VYWH0=<br>利用base64解码得到后半截flag：NAME_o2takuXX}</p><p>合并得到完整的flag：SYC{D4@Th_N0t4_NAME_o2takuXX}</p><h4 id="小彩蛋-1"><a href="#小彩蛋-1" class="headerlink" title="小彩蛋"></a>小彩蛋</h4><p>IuS9oOaJ vuWIsOS6 huS4gOac rOOAikRF QVRIIE5P VEXjgIvv vIzlpb3l pYflv4Pp qbHkvb/k vaDnv7vl vIDov5nm nKznrJTo rrDvvIzk vaDpmIXo r7vkuobk vb/nlKjo p4TliJnv vIzkvYbm mK/kvaDm g4rorrbl nLDlj5Hn jrDliJrm iY3nmoTo p4TliJnk uYvkuK3l lK/ni6zm sqHmnInn rKwxMOad oS4uLiIK IuS9oOWG jeasoeWO u+ehruiu pOaYr+WQ puWmguat pO+8jOes lOiusOS4 iueahOaW h+Wtl+WN tOS7v+S9 m+a0u+S6 hui1t+ad pe+8jOWc qOS9oOec vOS4reS4 jeaWreWc sOaUvuWk p+e8qeWw j++8jOS9 oOmXreS4 iuS6huWP jOecvC4u LiIKIuWO n+acrOm7 keiJsuea hOaWh+Wt l+S4gOi9 rOWPmOaI kOihgOe6 ouiJsu+8 jOivoeW8 gueahOeU u+mdoui/ mOaYr+WH uueOsOS6 juS9oOea hOinhue9 keiGnOWJ je+8jOS9 oOWGs+Wu muS4jeWG jee6oOe7 k+S6jumB l+Wkseea hOinhOWI me+8jOW5 u+iniea2 iOWkseS6 hi4uLiI=<br>“你找到了一本《DEATH NOTE》，好奇心驱使你翻开这本笔记，你阅读了使用规则，但是你惊讶地发现刚才的规则之中唯独没有第10条…”<br>“你再次去确认是否如此，笔记上的文字却仿佛活了起来，在你眼中不断地放大缩小，你闭上了双眼…”<br>“原本黑色的文字一转变成血红色，诡异的画面还是出现于你的视网膜前，你决定不再纠结于遗失的规则，幻觉消失了…”</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2023/12/18/hello-world/"/>
    <url>/2023/12/18/hello-world/</url>
    
    <content type="html"><![CDATA[<p>This is the first text.</p><p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p><script type="math/tex; mode=display">E=mc^2</script><script type="math/tex; mode=display">\frac{-b-\sqrt{\Delta}}{2a}</script>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
